<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Support.Controls"
                    x:Class="Support.Helpers.WindowAction">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Support;component/Dictionaries/ColorsDictionary.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Support;component/Dictionaries/TextDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region Window -->

    <!--#region Title bar -->
    <Style x:Key="WinTitleBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            CornerRadius="5"/>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource TextForegroundBrush}" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Title bar -->
    
    <!--#region Tool window -->
    <Style x:Key="WinToolStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="{DynamicResource MainBackgroundBrush}"
                            BorderBrush="{DynamicResource ContentForegroundBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch">
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{DynamicResource ControlBackgroundBrush}"
                                    CornerRadius="5, 5, 0, 0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove">
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="10,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="{DynamicResource TextForegroundBrush}"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter/>
                            </DockPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Tool window -->

    <!--#region Dialog window -->
    <Style x:Key="WinDialogStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="{DynamicResource MainBackgroundBrush}"
                            BorderBrush="{DynamicResource ContentForegroundBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch">
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{DynamicResource ControlBackgroundBrush}"
                                    CornerRadius="5, 5, 0, 0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove">
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="10,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="{DynamicResource TextForegroundBrush}"/>
                                        <Button
                                            Grid.Column="1"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{DynamicResource WinTitleBarButtonStyle}"
                                            Foreground="{DynamicResource TextForegroundBrush}"
                                            Click="CloseButtonClick"
                                            ToolTip="{DynamicResource CloseButtonWinToolTip}">
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"/>
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter/>
                            </DockPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Dialog window -->

    <!--#region Resize window -->
    <Style x:Key="WinResizeStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="{DynamicResource MainBackgroundBrush}"
                            CornerRadius="5">
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch">
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{DynamicResource ControlBackgroundBrush}"
                                    CornerRadius="5, 5, 0 ,0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove">
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="10,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="{DynamicResource TextForegroundBrush}"/>
                                        <Button
                                            x:Name="MinButton" 
                                            Grid.Column="1"
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{DynamicResource WinTitleBarButtonStyle}"
                                            Foreground="{DynamicResource TextForegroundBrush}"
                                            Click="MinButtonClick"
                                            ToolTip="{DynamicResource MinToTaskbarButtonWinToolTip}">
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"/>
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="2"
                                            x:Name="MaxButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{DynamicResource WinTitleBarButtonStyle}"
                                            Foreground="{DynamicResource TextForegroundBrush}"
                                            Click="MaxButtonClick">
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    x:Name="PART_MaxButton_Path"
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"/>
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="3"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{DynamicResource WinTitleBarButtonStyle}"
                                            Foreground="{DynamicResource TextForegroundBrush}"
                                            Click="CloseButtonClick"
                                            ToolTip="{DynamicResource CloseButtonWinToolTip}">
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"/>
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter/>
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            StrokeThickness="3"/>
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"/>
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"/>
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"/>
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
                            <Setter TargetName="MaxButton" Property="ToolTip" Value="{DynamicResource MinToNormalButtonWinToolTip}"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource ContentForegroundBrush}"/>
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="MaxButton" Property="ToolTip" Value="{DynamicResource MaxButtonWinToolTip}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Resize window -->

    <!--#endregion Window -->

    <!--#region Border -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource BorderBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion Border -->

    <!--#region Button -->
    <Style x:Key="MonochromeCustomButtonStyle" TargetType="local:CustomButton">
        <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CustomButton">
                    <Border x:Name="Border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CorRadius}">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" x:Name="Icon"
                                Visibility="{TemplateBinding IconVisibility}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding IconMargin}"
                                CornerRadius="{TemplateBinding CorRadius}">
                                <Path 
                                    Stretch="{TemplateBinding IconStretch}"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="{TemplateBinding Icon}"/>
                            </Border>
                            <TextBlock Grid.Column="1" x:Name="Text"
                                Text="{TemplateBinding Text}"
                                TextAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="IconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion Button -->

    <!--#region ToggleButton -->
    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        CornerRadius="5">
                        <Grid>
                            <Path x:Name="ArrowRight" Stroke="{DynamicResource ControlBorderBrush}" Stretch="Uniform" Margin="1" Data="M -2 0 L 2 4 L 6 0 Z" Visibility="Hidden">
                                <Path.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </Path.LayoutTransform>
                            </Path>
                            <Path x:Name="ArrowDown" Stroke="{DynamicResource ControlBorderBrush}" Stretch="Uniform" Margin="1" Data="M -2 0 L 2 4 L 6 0 Z" Visibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ArrowRight" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ArrowDown" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ArrowDown" Property="Fill" Value="{DynamicResource ControlBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ArrowRight" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ArrowDown" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ArrowRight" Property="Fill" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ToggleButton -->

    <!--#region CheckBox -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Content" Value=""/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"                           
                            Width="15"
                            Height="15"
                            CornerRadius="20"
                            Background="{DynamicResource InputAndSelectionFieldBackgroundBrush}"
                            BorderBrush="{DynamicResource ControlBorderBrush}"
                            BorderThickness="1"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Margin="5">
                            <Ellipse x:Name="CheckMark" Grid.Column="0"                                
                                    Stroke="{DynamicResource TextForegroundBrush}"
                                    Fill="{DynamicResource TextForegroundBrush}"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    Margin="2"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ContentForegroundBrush}"/>
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ContentForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CheckBox -->

    <!--#region TextBox -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputAndSelectionFieldBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Focusable="True"
                        IsManipulationEnabled="{TemplateBinding IsManipulationEnabled}"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ContentForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter Property="SelectionBrush" Value="{DynamicResource ContentForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TextBox -->

    <!--#region ComboBox -->

    <!--#region ComboBox textBox -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox"/>
    <!--#endregion ComboBox textBox -->

    <!--#region ComboBox toggle button -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{DynamicResource ControlBackgroundBrush}"
                   BorderBrush="{DynamicResource ControlBorderBrush}"  BorderThickness="1"/>
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="5,0,0,5" Background="{DynamicResource InputAndSelectionFieldBackgroundBrush}"
                   BorderBrush="{DynamicResource ControlBorderBrush}" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource TextForegroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                 Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContentForegroundBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ContentForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource InputAndSelectionFieldBackgroundBrush}" />
                <Setter TargetName="BorderToggle" Property="BorderBrush" Value="{DynamicResource InputAndSelectionFieldBackgroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion ComboBox toggle button -->

    <!--#region ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                        Background="{DynamicResource InputAndSelectionFieldBackgroundBrush}"
                        Padding="2"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ComboBoxItem -->

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                            Template="{DynamicResource ComboBoxToggleButton}" Grid.Column="2" 
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" 
                            ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" 
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                            Margin="6,3,23,3" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" 
                            TextBlock.Foreground="{DynamicResource TextForegroundBrush}"/>
                        <TextBox x:Name="PART_EditableTextBox" 
                            Style="{x:Null}" 
                            Template="{DynamicResource ComboBoxTextBox}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="6,3,23,3" 
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden" 
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                            Placement="Bottom" 
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" Focusable="False"
                            PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" 
                                SnapsToDevicePixels="True" 
                                MinWidth="{TemplateBinding ActualWidth}" 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource InputAndSelectionFieldBackgroundBrush}" 
                                    CornerRadius="5" 
                                    Margin="0,3,0,3"/>
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel 
                                        IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ComboBox -->

    <!--#region ListBox -->

    <!--#region ListBoxItem -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border"
                        Background="{DynamicResource ListBoxItemBackgroundBrush}"
                        CornerRadius="5"
                        Margin="3">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ListBoxItemBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListBoxItem -->

    <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="5">
                        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListBox -->

    <!--#region ScrollViewer -->

    <!--#region LineButton -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
    </Style>
    <!--#endregion LineButton -->

    <!--#region PageButton -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion PageButton -->

    <!--#region Thumb -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Width="Auto" Margin="1,0,1,0"/>
                    <ControlTemplate.Triggers>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Thumb -->

    <!--#region Scroll bar -->

    <!--#region Vertical scroll bar -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
            <RepeatButton Grid.Row="0" Style="{DynamicResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{DynamicResource ScrollBarThumb}" Margin="1,0,1,0" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{DynamicResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Thumb.IsMouseOver" Value="True">
                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Vertical scroll bar -->

    <!--#region Horizontal scroll bar -->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="0"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="0"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
            <RepeatButton Grid.Column="0"  Style="{DynamicResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{DynamicResource ScrollBarThumb}" Margin="0,1,0,1" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource ControlBackgroundBrush}" BorderThickness="1"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{DynamicResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Thumb.IsMouseOver" Value="True">
                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ContentForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Horizontal scroll bar -->

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion Scroll bar -->

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VirtualizingPanel.CacheLength" Value="15"/>
        <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Margin="0, 0, 3, 0"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Margin="0, 0 , 0, 3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion  ScrollViewer -->

    <!--#region Menu -->

    <!--#region MenuItem -->

    <!--#region TopLevelHeader is a top level menu item that has child items -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                <Popup x:Name="Popup"
                     Placement="Bottom"
                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                        Background="{DynamicResource MainBackgroundBrush}"
                        BorderBrush="{DynamicResource ContentForegroundBrush}"
                        BorderThickness="1"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <StackPanel 
                            Background="{DynamicResource MainBackgroundBrush}"
                            Margin="5,5,5,5"
                            IsItemsHost="True"
                            ClipToBounds="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion TopLevelHeader is a top level menu item that has child items -->

    <!--#region TopLevelItem is a top level menu item that does not have any child items -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion TopLevelItem is a top level menu item that does not have any child items -->

    <!--#region SubmenuHeader is a sub menu item that has child items -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Header"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" x:Name="Icon"
                      ContentSource="Icon"
                      Margin="6,3,6,3"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"/>
                <ContentPresenter Grid.Column="1" x:Name="Header"
                      ContentSource="Header"
                      Margin="6,3,6,3"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      RecognizesAccessKey="True"/>
                <TextBlock x:Name="Shotcut"
                     Grid.Column="2"
                     Text="{TemplateBinding InputGestureText}"
                     Margin="6,3,6,3"
                     DockPanel.Dock="Right"/>
                <Popup x:Name="Popup"
                     Placement="Right"
                     HorizontalOffset="-4"
                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                     AllowsTransparency="True"
                     Focusable="False"
                     PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                        Background="{DynamicResource MainBackgroundBrush}"
                        BorderBrush="{DynamicResource ContentForegroundBrush}"
                        BorderThickness="1"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <StackPanel 
                            Background="{DynamicResource MainBackgroundBrush}"
                            Margin="5,5,5,5"
                            IsItemsHost="True"
                            ClipToBounds="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="False">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource MainBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,5,0,5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion SubmenuHeader is a sub menu item that has child items -->

    <!--#region SubmenuItem	is a sub menu item that does not have any child items -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Header"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" x:Name="Icon"
                      ContentSource="Icon"
                      Margin="6,3,6,3"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"/>
                <ContentPresenter Grid.Column="1" x:Name="Header"
                      ContentSource="Header"
                      Margin="6,3,6,3"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      RecognizesAccessKey="True"/>
                <TextBlock x:Name="Shotcut"
                     Grid.Column="2"
                     Text="{TemplateBinding InputGestureText}"
                     Margin="6,3,6,3"
                     DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ContentForegroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="False">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource MainBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                <Setter Property="CornerRadius" TargetName="Border" Value="5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion SubmenuItem	is a sub menu item that does not have any child items -->

    <!--#endregion MenuItem -->

    <!--#region Separator -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource ContentForegroundBrush}" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Separator -->

    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Name="Border" Background="{DynamicResource ControlBorderBrush}" BorderThickness="1" CornerRadius="5">
                        <StackPanel 
                            ClipToBounds="True"
                            Orientation="Horizontal"
                            IsItemsHost="True">
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Menu -->

    <!--#region ToolTip -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                        Background="{DynamicResource ToolTipBackgorundBrush}"
                        BorderBrush="{DynamicResource ContentForegroundBrush}"
                        BorderThickness="1"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">
                        <ContentPresenter Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ToolTip -->
    
    <!--#region Progress bar -->
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border Background="{StaticResource InputAndSelectionFieldBackgroundBrush}" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="5">
                        <Grid>
                            <Border x:Name="PART_Track" CornerRadius="5"/>
                            <Border x:Name="PART_Indicator"
                                Background="{StaticResource ToolTipLinearGradient}"
                                BorderThickness="1"
                                CornerRadius="5"
                                HorizontalAlignment="Left"
                                Margin="1">
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Progress bar -->

</ResourceDictionary>